{-# LANGUAGE NoImplicitPrelude #-}

module Auction.BidderStatus
    ( approveBidders
    , registerBidder
    ) 
    where

import qualified PlutusTx.AssocMap as AssocMap
import           PlutusTx.Prelude ( ($), foldr ) 

import           Auction.Bidders ( Bidders, mapFrom )
import qualified Auction.CertApprovals as CA
import qualified Auction.CertRegistration as CR
import           Auction.Status ( Status(..) )


registerBidder :: Bidders -> CR.CertRegistration -> Bidders
registerBidder b x = AssocMap.insert (CR.pkhFor x) Registered (mapFrom b)


approveBidders :: Bidders -> CA.CertApprovals -> Bidders
approveBidders b x = foldr (`AssocMap.insert` Approved) (mapFrom b) $ CA.pkhsFor x