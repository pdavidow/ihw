{-# LANGUAGE NoImplicitPrelude #-}

module Auction.BidderStatus
    ( approveBidders
    , registerBidder
    ) 
    where

import qualified PlutusTx.AssocMap as AssocMap
import           PlutusTx.Prelude ( ($), foldr ) 

import           Auction.Bidders ( Bidders, mapFrom )
import qualified Auction.Approvals as CA
import qualified Auction.Registration as CR
import           Auction.Status ( Status(..) )


registerBidder :: Bidders -> CR.Registration -> Bidders
registerBidder b x = AssocMap.insert (CR.pkhForRegistration x) Registered (mapFrom b)


approveBidders :: Bidders -> CA.Approvals -> Bidders
approveBidders b x = foldr (`AssocMap.insert` Approved) (mapFrom b) $ CA.pkhsForApprovals x